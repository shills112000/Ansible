TestDesc="Status Severity Time Unique UID No Results 0"
# Description This test verifies that each user is assigned a unique UID.
# Unique UIDs help prevent unauthorized access to files, processes and other system re
# sources.
# Rules List of Duplicated UIDs
# Element Equals "Duplicated UIDs"
# Version conditions If an element version has no content, the condition should:Pass Regular expression: /.+/
# (Flags:Case insensitive) Duplicated UID Does not exist
# Remediation To remediate failure of this policy test, change the same UIDs of accounts.
# Change the same UIDs of accounts:
# 1. Become superuser or assume an equivalent role.
# 2. Run the script:
# DuplicatedUIDs=$(/bin/egrep -v "^[[:space:]]*($|\#|\+)" /etc/pass
# wd 2>/dev/null | /bin/awk -F: '{print $3}' | /bin/sort -n | /usr/bin/uniq
# -d | /bin/egrep -v "^[[:space:]]*$"); for DuplicatedUID in $Dupli
# catedUIDs; do /bin/egrep -v "^[[:space:]]*($|\#|\+)" /etc/passwd
# 2>/dev/null | /bin/awk -F: '{print "UID:"$3, "User:"$1}' | /bin/egrep
# "UID:$DuplicatedUID[[:space:]]" ; done
# to list all accounts having the same UID as others.
# 3. Run the usermod -u <uid_value> <user_name> command to change the same
# UIDs of the accounts found in step 2.
# For further details, please run the command man usermod to read man page.
if [ `/usr/bin/sed -e '/^$/d' /etc/passwd| awk -F: '{print $3}' |sort |uniq -d|wc -l` -gt 0 ]; then
        for i in `/usr/bin/sed -e '/^$/d' /etc/passwd| awk -F: '{print $3}' |sort |uniq -d`; do
                awk -F: ' ( $3 == x ) { print $0,"this passwd ID is duplicated - please rectify" } ' x=$i /etc/passwd
        done
        echo $?
else
        echo "everything ok - no duplicate passwd ids found"
        exit 0
fi
