TestDesc="Description This test verifies that /etc/login.defs is configured to force password change after 90 days or less"
# Description This test verifies that /etc/login.defs is configured to force password change after 90 days or less
# less.
# This setting is used for the creation of new accounts. Requiring regular password changes en
# sures that if a password is cracked, it will only be valid temporarily.
# Rules System Configuration Files
# Element Equals "/etc/login.defs"
# Version conditions If an element version has no content, the condition should:Fail Regular expression: /^[\ \t]*P
# ASS_MAX_DAYS[\ \t]+(\d+)[\ \t]*(?:$|\#)/ (Flags:Multiline,Comments mode) PASS_MAX_D
# AYS Less than or equal 90 AND PASS_MAX_DAYS Greater than 0
# Remediation To remediate failure of this policy test, set the maximum number of days a password may be
# used to at least 1, but not greater than 90.
# Setting the maximum number of days a password may be used to at least 1, but not
# greater than 90:
# 1. Become superuser or assume an equivalent role.
# 2. Open the /etc/login.defs file.
# 3. Find the line PASS_MAX_DAYS <value>.
# 4. Set the <value> to greater than 0 and less than or equal 90 and save the file.
# For further details, please run the command man login.defs to read man page.
#!/bin/bash
# Command Line /bin/sh $(ScriptFile.sh)
# Script # /bin/sh $(ScriptFile.sh)
# # Initialize Variables
 FileName="/etc/login.defs"
 ParameterName="PASS_MAX_DAYS"
 SeparateSymbol=" "
 Value="90"
# Backup the file before updating
 if [ -e "$FileName" ]; then
     BaseName=`/bin/basename "$FileName" 2>/dev/null`
     DirName=`/usr/bin/dirname "$FileName" 2>/dev/null`
     FullPath="${TW_REMEDIATION_BACKUP_DIR}${DirName}"
     if [ ! -d "$FullPath" ]; then
        CreateLog=`/bin/mkdir -p "$FullPath" 2>&1`
        if [ -n "$CreateLog" ]; then
           /bin/echo "FAILURE-1003: Could not create [$FullPath] file/directory"
           exit 1003
        fi
     fi
     BackupName="$FullPath/${BaseName}.tecopy"
     CopyLog=`/bin/cp -f "$FileName" "$BackupName" 2>&1`
     if [ -n "$CopyLog" ]; then
        /bin/echo "FAILURE-1007: Could not backup [$FileName] file"
        exit 1007
     fi
  fi
# Issue the command to update the value of parameter
  IsExisted=`/bin/awk -F"$SeparateSymbol" '$1 ~ \
 /^[[:space:]]*'"$ParameterName"'[[:space:]]*$/ {print}' "$FileName" 2>/dev/null`
  if [ -n "$IsExisted" ]; then
     UpdateLog=`(/bin/awk -F"$SeparateSymbol" \
 '$1 ~ /^[[:space:]]*'"$ParameterName"'[[:space:]]*$/ { $0 = "'"$ParameterName"''"$SeparateSymbol"''"$Value"'"}{print}' "$BackupName" > "$FileName") 2>&1`
# Rollback to the original file
 if [ -n "$UpdateLog" ]; then
    /bin/echo "FAILURE-4001: Could not change value of [$ParameterName] parameter to [$Value] in ["$FileName"] file"
    /bin/cp -f "$BackupName" "$FileName" 2>/dev/null
    exit 4001
 fi
  /bin/echo "SUCCESS-4001: Value of [$ParameterName] parameter changed to [$Value] in ["$FileName"] file"
 else
    AddLog=`(/bin/echo "${ParameterName}${SeparateSymbol}${Value} >> "$FileName") 2>&1`
if [ -n "$AddLog" ]; then
   /bin/echo "FAILURE-6001: Could not add [${ParameterName}${SeparateSymbol}${Value}] line to ["$FileName"] file"
   exit 6001
fi
  /bin/echo "SUCCESS-6003:[${ParameterName}${SeparateSymbol}${Value}] line added to ["$FileName"] file"
fi
exit 0
# # AR_ACTION = RHEL_PARAMETER_SETTING
# # AR_COMPLETION = COMPLETION_NONE
# # AR_TEST_ID = T0003381
# # AR_TEST_NAME = Verify PASS_MAX_DAYS Parameter in /etc/login.defs
# Post Remediation Category None
# Post Remediation Steps No additional Post Remediation steps
# Remediated Elements None
