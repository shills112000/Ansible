TestDesc=" Verify Default umask for Users in /etc/bashrc"
# No Results 0
# Description This test verifies that the default umask in /etc/bashrc is set to 077. The umask value influ
# ences the permissions assigned to files when they are created. A misconfigured umask value
# could result in files with excessive permissions that can be read and/or written to by unautho
# rized users.
# Rules umask in /etc/bashrc
# Element Equals "/etc/bashrc"
# Version conditions If an element version has no content, the condition should:Fail Regular expression: /^[\ \t]*u
# mask[\ \t](?![\ \t]*0*77[\ \t]*(?:$|\#)).*/ (Flags:Multiline,Comments mode) Default umask Setting
# Deviation Does not exist
# Remediation To remediate failure of this policy test, set the default umask to 077 for global initialization file.
# Setting the default umask to 077 for global initialization file:
# 1. Become superuser or assume an equivalent role.
# 2. Open the /etc/bashrc file.
# 3. Find the line that contains umask <value>.
# 4. If found, replace the <value> to 077.
# 5. If not found, add the line umask 077 to the file.
# 6. Save the file.
# For further details, please run the command man 2 umask to read man page.
#!/bin/bash
# Command Line /bin/sh $(ScriptFile.sh)
# Script # /bin/sh $(ScriptFile.sh)
 # Initialize Variables
 FileName="/etc/bashrc"
 ParameterName="umask"
 SeparateSymbol=" "
 Value="077"
 # Backup the file before updating
 if [ -e "$FileName" ]; then
    BaseName=`/bin/basename "$FileName" 2>/dev/null`
    DirName=`/usr/bin/dirname "$FileName" 2>/dev/null`
    FullPath="${TW_REMEDIATION_BACKUP_DIR}${DirName}"
    if [ ! -d "$FullPath" ]; then
       CreateLog=`/bin/mkdir -p "$FullPath" 2>&1`
       if [ -n "$CreateLog" ]; then
          /bin/echo "FAILURE-1003: Could not create [$FullPath] file/directory"
          exit 1003
       fi
    fi
    BackupName="$FullPath/${BaseName}.tecopy"
    CopyLog=`/bin/cp -f "$FileName" "$BackupName" 2>&1`
    if [ -n "$CopyLog" ]; then
       /bin/echo "FAILURE-1007: Could not backup [$FileName] file"
       exit 1007
    fi
 fi
 # Issue the command to update the value of parameter
 IsExisted=`/bin/awk -F"$SeparateSymbol" '$1 ~ \
 /^[[:space:]]*'"$ParameterName"'[[:space:]]*$/ {print}' \
 "$FileName" 2>/dev/null`
 if [ -n "$IsExisted" ]; then
    UpdateLog=`(/bin/awk -F"$SeparateSymbol" \
 '$1 ~ /^[[:space:]]*'"$ParameterName"'[[:space:]]*$/ {
 $0 = "'"$ParameterName"''"$SeparateSymbol"''"$Value"'"
 }{print}' "$BackupName" > "$FileName") 2>&1`
 # Rollback to the original file
 if [ -n "$UpdateLog" ]; then
    /bin/echo "FAILURE-4001: Could not change value of [$ParameterName] parameter to [$Value] in ["$FileName"] file"
    /bin/cp -f "$BackupName" "$FileName" 2>/dev/null
    exit 4001
 fi
 /bin/echo "SUCCESS-4001: Value of [$ParameterName] parameter changed to [$Value] in ["$FileName"] file"
 else
    AddLog=`(/bin/echo "${ParameterName}${SeparateSymbol}${Value}" >> "$FileName") 2>&1`
    if [ -n "$AddLog" ]; then
       /bin/echo "FAILURE-6001: Could not add [${ParameterName}${SeparateSymbol}${Value}] line to ["$FileName"] file"
       exit 6001
    fi
    /bin/echo "SUCCESS-6003: [${ParameterName}${SeparateSymbol}${Value}] line added to ["$FileName"] file"
 fi
 exit 0
 # AR_ACTION = RHEL_PARAMETER_SETTING
 # AR_COMPLETION = COMPLETION_NONE
 # AR_TEST_ID = T0005437
 # AR_TEST_NAME = Verify Default umask for Users in /etc/bashrc
# Post Remediation Category None
# Post Remediation Steps No additional Post Remediation steps
# Remediated Elements /etc/bashrc
