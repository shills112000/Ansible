TestDesc=" For 32 Bit Architecture: Verify That audit Logging Is Enabled to Log Events of clock_settime() Functions"
# ging Is Enabled to Log Events of clock_sett
# ime() Functions
# No Results 0
# Description This test verifies that /etc/audit/audit.rules contains the '-a always,exit -F arch=b32 -S clock
# _settime -k time-change' option.
# It is important to maintain an audit trail in order to thoroughly track and analyze system activity
# when something goes wrong.
# Rules System Configuration Files
# Element Equals "/etc/audit/audit.rules"
# Version conditions If an element version has no content, the condition should:Fail Regular expression: /^[\ ]*
# -a[\ ]+(?=\S*\bexit\b)(?=\S*\balways\b)(?!\S*\bentry\b)(?!\S*\bnever\b)\S*[\ ]+(?=.*-F[\ ]+arch=
# b32\b)(?=.*-S[\ ]+clock_settime\b)(?=.*-k[\ ]+time-change\b).*$/ (Flags:Multiline,Comments
# mode) audit Line for Logging Events of clock_settime() Functions Exists
# Remediation To remediate failure of this policy test, configure the system to audit events that modify sys
# tem date and/or time.
# Configuring the system to audit events that modify system date and/or time on RHEL 5,
# 6:
# 1. Become superuser or assume an equivalent role.
# 2. Open the /etc/audit/audit.rules file.
# 3. Find the line that contains the -a always,exit -F arch=b32 -S clock_settime -k timechange
# entry.
# 4. Uncomment that line or add it to the end of file (if not found) then save the file.
# 5. Run the service auditd restart command to apply the change.
# Configuring the system to audit events that modify system date and/or time on RHEL 7:
# 1. Become superuser or assume an equivalent role.
# 2. Open the /etc/audit/rules.d/audit.rules file.
# 3. Find the line that contains the -a always,exit -F arch=b32 -S clock_settime -k timechange
# entry.
# 4. Uncomment that line or add it to the end of file (if not found) then save the file.
# 5. Run the service auditd restart command to apply the change.
# For further details, please run the command man auditctl to read man page.
/bin/echo "Success - no need to run as 64bit only systems"
exit 0
#!/bin/bash
#
# initialize Variables
  File6="/etc/audit/audit.rules"
  File7="/etc/audit/rules.d/audit.rules"
  Release=`/bin/cat /etc/redhat-release |grep "release 7"`
  Line="-a always,exit -F arch=b32 -S clock_settime -k timechange"
#
# Check OS version and set audit file location
  if [ -n "$Release" ]; then
#
# sets file for RHEL 5 and 6 
     File="$File6"
  else
#
# sets file for RHEL 7
    File="$File7"
  fi
#
# Backup the file before updating
 if [ -e "$File" ]; then
    BaseName=`/bin/basename "$File" 2>/dev/null`
    DirName=`/usr/bin/dirname "$File" 2>/dev/null`
    FullPath="${TW_REMEDIATION_BACKUP_DIR}${DirName}"
    if [ ! -d "$FullPath" ]; then
       CreateLog=`/bin/mkdir -p "$FullPath" 2>&1`
       if [ -n "$CreateLog" ]; then
          /bin/echo "FAILURE-1003: Could not create [$FullPath] file/directory"
          exit 1003
       fi
     fi
     BackupName="$FullPath/${BaseName}.tecopy"
     CopyLog=`/bin/cp -f "$File" "$BackupName" 2>&1`
     if [ -n "$CopyLog" ]; then
        /bin/echo "FAILURE-1007: Could not backup [$File] file"
        exit 1007
     fi
 else
    /bin/echo FAILURE-1002: [$File] file/directory does not exist
    exit 1002
 fi
#
# Issue the command to add line to file 
 AddLog=`(/bin/echo "$Line" >> $File) 2>&1`
 if [ -n "AddLog" ]; then
   /bin/echo "FAILURE-6001: Could not add [$Line] line to [$File] file"
   exit 6001
 fi
 /bin/echo "FAILURE-6003: [$Line] line added to [$File] file"
#
# Restarting auditd service
 /bin/service auditd restart
 exit 0
