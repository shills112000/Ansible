TestDesc="Verify That max_log_file_action Is Equal to keep_logs"
# No Results 0
# Description Normally, auditd will hold 4 logs of maximum log file size before deleting older log files. In
# hight security contexts, the benefits of maintaining a long audit history exceed the cost of stor
# ing the audit history.
# Rules System Configuration Files
# Element Equals "/etc/audit/auditd.conf"
# Version conditions If an element version has no content, the condition should:Fail Regular expression: /^[\ ]*
# max_log_file_action[\ ]+=[\ ]+(\S+)[\ ]*$/ (Flags:Multiline,Case insensitive,Comments mode)
# max_log_file_action Value Matches "^(?:(?i)keep_logs)$"
# Remediation To remediate failure of this policy test, set the system action to take when the system has de
# tected that the max file size limit has been reached.
# Setting the system action to take when the system has detected that the max file size
# limit has been reached:
# 1. Become superuser or assume an equivalent role.
# 2. Open the /etc/audit/auditd.conf file.
# 3. Find the line that contains max_log_file_action = <value>.
# 4. Set the <value> to keep_logs and save the file.
# 5. Run the /usr/sbin/service auditd restart command to apply the change.
# For further details, please run the command man auditd.conf to read man page.
#!/bin/bash
# initialize Variables
FileName="/etc/audit/auditd.conf"
 TempFile="audit_tmp"
 Line="max_log_file_action = keep_logs"
sline="max_log_file_action ="
Linec=`cat -n $FileName | grep "$sline" | awk '{print $1}'`
Linec=$(( $Linec +0 ))

# # Backup the file before updating
 if [ -e "$FileName" ]; then
    BaseName=`/bin/basename "$FileName" 2>/dev/null`
    DirName=`/usr/bin/dirname "$FileName" 2>/dev/null`
    FullPath="${TW_REMEDIATION_BACKUP_DIR}${DirName}"
    if [ ! -d "$FullPath" ]; then
       CreateLog=`/bin/mkdir -p "$FullPath" 2>&1`
       if [ -n "$CreateLog" ]; then
          /bin/echo "FAILURE-1003: Could not create [$FullPath] file/directory"
          exit 1003
       fi
     fi
    BackupName="$FullPath/${BaseName}.tecopy"
    CopyLog=`/bin/cp -f "$FileName" "$BackupName" 2>&1`
    if [ -n "$CopyLog" ]; then
        /bin/echo "FAILURE-1007: Could not backup [$FileName] file"
        exit 1007
    fi
 else
    /bin/echo FAILURE-1002: [$FileName] file/directory does not exist
    exit 1002
 fi
sed -i 's/max_log_file_action =/#max_log_file_action =/g' "$FileName"
sed -e '${Linec}s/$/\n max_log_file_action = keep_logs/' "$FileName" > "$TempFile"
sed -i 's/ max_log_file_action =/max_log_file_action =/g' "$TempFile"
/bin/cp -f "$TempFile" "$FileName" 2>&1
/bin/echo "SUCCESS-6003: [$Line] line updated in [$FileName] file"
/bin/echo "restarting service to apply changes"
/usr/sbin/service auditd restart
exit 6003
